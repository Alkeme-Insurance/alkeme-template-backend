"""Project Pydantic models."""

from __future__ import annotations

from datetime import datetime

from pydantic import BaseModel, ConfigDict, Field


class ProjectBase(BaseModel):
    """Base project model with shared fields."""

    name: str = Field(..., min_length=1, max_length=200)
    description: str | None = None


class ProjectCreate(ProjectBase):
    """Project creation schema (POST requests)."""

    pass


class ProjectUpdate(BaseModel):
    """Project update schema (PUT/PATCH requests)."""

    name: str | None = Field(None, min_length=1, max_length=200)
    description: str | None = None


class ProjectInDB(ProjectBase):
    """Project as stored in database."""

    model_config = ConfigDict(arbitrary_types_allowed=True)

    id: str = Field(alias="_id")
    owner_id: str
    created_at: datetime
    updated_at: datetime | None = None


class ProjectPublic(ProjectBase):
    """Project as returned in API responses."""

    model_config = ConfigDict(
        from_attributes=True,
        populate_by_name=True,
    )

    id: str = Field(alias="_id")
    owner_id: str
    created_at: datetime

