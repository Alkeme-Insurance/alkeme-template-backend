[project]
name = "{{ package_name }}"
version = "0.1.0"
description = "{{ project_description }}"
readme = "README.md"
requires-python = ">=3.10,<3.11"  # Motor 2.x requires Python <3.11
authors = [
    { name = "{{ author_name }}", email = "{{ author_email }}" }
]

dependencies = [
    "fastapi[standard]>=0.117.1",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.11.0",
    "motor>=2.5.0,<3.0.0",  # Motor 2.x for PyMongo 3.x compatibility
    "pymongo>=3.13.0,<4.0.0",  # PyMongo 3.x for Cosmos DB wire version 6 compatibility
    "dnspython>=2.0.0",  # DNS support for MongoDB connection strings
{% if use_azure_auth -%}
    "fastapi-azure-auth>=5.2.0",  # Azure AD authentication
{% endif -%}
]

[dependency-groups]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "httpx>=0.27.0",  # For testing FastAPI
    "mypy>=1.11.0",
    "ruff>=0.7.0",
]

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "SIM", # flake8-simplify
    "PL",  # pylint
]
ignore = [
    "E501",    # line too long (handled by formatter)
    "PLR0913", # too many arguments
]

[tool.ruff.lint.isort]
known-first-party = ["backend"]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_unused_ignores = true
show_error_codes = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "motor.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
addopts = "--strict-markers --tb=short"
markers = [
    "asyncio: mark test as async",
]

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

